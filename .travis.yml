sudo: true

dist:
  - xenial

services:
  - postgresql

language: python

python:
  - "2.7"
  - "3.5"
  - "3.6"
  - "3.7"

env:
  - MODE=flake8
  - MODE=flake8-strict
  - MODE=docs
  - DJANGO_VERSION=dj111
  - DJANGO_VERSION=dj21
  - DJANGO_VERSION=dj22
  - DJANGO_VERSION=djdev

matrix:
  allow_failures:
    - env: DJANGO_VERSION=djdev
    - env: MODE=flake8-strict
  exclude:
    - python: "2.7"
      env: DJANGO_VERSION=djdev
    - python: "2.7"
      env: DJANGO_VERSION=dj21
    - python: "2.7"
      env: DJANGO_VERSION=dj22

before_install:
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 762E3157

addons:
  apt:
    packages:
    - binutils
    - libproj-dev
    - gdal-bin

cache:
  directories:
    - $HOME/.cache/pip

before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

# Manual postgresql / postgis install
before_install:
  - sudo apt-get update
  - sudo apt-get --yes remove postgresql\*
  - sudo apt-get install -y postgis postgresql-9.6-postgis-2.4 postgresql-9.6-postgis-scripts
  - sudo service postgresql restart 9.6

# command to install dependencies
install:
    - pip install -U pip
    - pip install -U wheel virtualenv
    - pip install tox coveralls

after_success:
    - coveralls

before_script:
  - psql --version
  - psql -U postgres -c 'CREATE DATABASE tastypie_test;'
  - psql -U postgres -c "CREATE EXTENSION postgis" -d tastypie_test
  - psql -U postgres -c "CREATE EXTENSION postgis_topology" -d tastypie_test
  - psql -c 'CREATE ROLE travis SUPERUSER LOGIN CREATEDB;' -U postgres

# command to run tests
script:
    - coverage erase
    - tox -e py${TRAVIS_PYTHON_VERSION/./}-${DJANGO_VERSION}${MODE}
